#Debian : http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=518179
#Upstream : https://bugs.launchpad.net/screenlets/+bug/340197

Index: trunk/src/lib/__init__.py
===================================================================
--- trunk.orig/src/lib/__init__.py	2009-04-28 00:15:03.000000000 +0200
+++ trunk/src/lib/__init__.py	2009-04-28 00:17:37.000000000 +0200
@@ -865,6 +865,10 @@
 				self.first_run = True
 			self.window.hide()	
 
+		#Make opacity available only when composite is enabled
+		if not self.window.is_composited () :
+			self.disable_option('opacity')
+
 	def __setattr__ (self, name, value):
 		# set the value in GObject (ESSENTIAL!!!!)
 		self.on_before_set_atribute(name, value)
@@ -1726,7 +1730,11 @@
 
 		if not self.window.is_composited () :
 			self.show_buttons = False
-		#	print _('Warning - Buttons will not be shown until screenlet is restarted')
+			self.disable_option("opacity")
+ 		#	print _('Warning - Buttons will not be shown until screenlet is restarted')
+ 
+		if self.window.is_composited () :
+			self.enable_option("opacity")
 
 		self.is_sticky = self.is_sticky #and again ...
 		self.keep_above= self.keep_above
Index: trunk/src/lib/options.py
===================================================================
--- trunk.orig/src/lib/options.py	2009-04-28 00:15:12.000000000 +0200
+++ trunk/src/lib/options.py	2009-04-28 00:18:08.000000000 +0200
@@ -423,6 +423,14 @@
 				o.disabled = True
 				return True
 		return False
+
+	def enable_option(self, name):
+		"""Enable the inputs for a certain Option."""
+		for o in self.__options__:
+			if o.name == name:
+				o.disabled = False
+				return True
+		return False
 	
 	def export_options_as_list (self):
 		"""Returns all editable options within a list (without groups)
