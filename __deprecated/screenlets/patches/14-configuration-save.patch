#upstream: https://bugs.launchpad.net/screenlets/+bug/345359

Index: trunk/src/lib/backend.py
===================================================================
--- trunk.orig/src/lib/backend.py	2009-04-28 00:34:32.000000000 +0200
+++ trunk/src/lib/backend.py	2009-04-28 00:36:41.000000000 +0200
@@ -217,30 +217,38 @@
 				lst.append([oname, self.__instances[id][oname]])
 			# and save them (if any)
 			if len(lst) > 0:
-				backup = ''
-				try:
-					backup = open(self.path + id + '.ini', 'r')
-					backup.close()	
-				except:pass
-				try:
-					# In here something strage appends , sometimes it opens the file , then it cant write to it  so it writes and empty file reseting all settings
-		
-					f = open(self.path + id + '.ini', 'w')
-					for el in lst:
-						f.write(el[0] + '=' + el[1] + "\n")
-					f.close()
-					print "OK"
-				except:
-					if backup != '' and os.path.exists(self.path + id + '.ini'):
-						try:
-							backup_restore = open(self.path + id + '.ini', 'w')	
-							backup_restore.write(backup)	
-							backup_restore.close()
-						except:pass								
-					print _("error while saving config: %s %s") % ( oname , self.path)
+				self.__save_settings (self.path + id + '.ini', lst)
 		# clear queue
 		self.__queue = []
 		# NOT continue the timeout-function (!!!!!)
 		return False
 
+	def __save_settings (self, filename, lst):
+		""" Try to save settings in a file, first save this to a temporal file avoid encodings a disk full errors """
+		filenametmp = filename + '.tmp'
+		isOk = True
+		newini = ''
+		try:
+			# Is posible to fail with encoding error?
+			for el in lst:
+				newini += "%s=%s\n" % (el[0], el[1])
+		except:
+			isOk = False
+			print _("error while convert config to string (encoding error?), I lose your last changes :'(")
+
+		if isOk:
+			# Write the new settings to a temporal file, disk full, encoding, rights may fails at this point.
+			try:
+				open(filenametmp, 'w').write(newini)
+			except:
+				isOk = False
+				print _("error while saving configuration to a temporal file %s, disk full?") % filenametmp
+
+		if isOk:
+			# Move saved settings to definitive configuration file, disk error o incorrect rights may fails at this point.
+			try:
+				import shutil
+				shutil.move(filenametmp, filename)
+			except:
+				print _("error while moving temporal file to configuration file, %s > %s, sorry, I lose your settings. :'(") % (filenametmp, filename)
 
